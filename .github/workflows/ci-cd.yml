name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    env:
      DATABASE_URL: "postgresql+asyncpg://test:test@localhost:5432/test_db"
      
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
        pip install PyJWT>=2.0.0
        pip install aiosqlite
    
    - name: Set PYTHONPATH
      run: |
        echo "PYTHONPATH=$PYTHONPATH:$(pwd)/src" >> $GITHUB_ENV
    
    - name: Run tests and coverage
      run: |
        pytest tests/ --cov=fastyr --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Prepare Docker build
      if: github.ref == 'refs/heads/main'
      run: |
        # Create docker-entrypoint.sh
        echo '#!/bin/bash
        set -e
        
        # Initialize alembic if needed
        if [ ! -f alembic.ini ]; then
            alembic init migrations
        fi
        
        # Run migrations
        alembic upgrade head
        
        # Start the application
        exec uvicorn fastyr.api.main:app --host 0.0.0.0 --port 8000' > docker-entrypoint.sh
        chmod +x docker-entrypoint.sh
    
    - name: Build and push Docker image
      if: github.ref == 'refs/heads/main'
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/fastyr:${{ github.sha }} .
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/fastyr:${{ github.sha }}